<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

	<select id="selectMember" parameterType="map" resultType="map">
		/* SQL_ID : member.selectMember */
		SELECT
			wa.admin_no,
			wa.admin_group_no,
			wa.company_no,
			wa.admin_id,
			wa.password,
			wa.disp_ord,
			wa.admin_name,
			wa.b2c_yn,
			wa.tablet_hp,
			wa.admin_type,
			wa.profile_url,
			wa.department_cd,
			wa.position_cd,
			wa.mobile,
			wa.stat,
			wa.level_cd,
			wa.web_push_token,
			wa.team_yn,
			wa.master_w_yn,
			wa.main_type,
			wa.create_date,
			wa.update_date,
			wa.password_init_yn,
			wa.password_modify_date,
			wa.login_fail_cnt,
			wa.lock_yn
		FROM
			w_admin wa
		WHERE
			stat = '00'
			AND admin_id = #{member_id}
	
	</select>

	<select id="selectMemberRole" parameterType="map" resultType="map">
		/* SQL_ID : member.selectMemberRole */
		SELECT
			wra.role_no,
			wra.admin_no,
			wra.create_no,
			wra.update_no,
			wra.create_date,
			wra.update_date
		FROM
			w_role_admin wra
		WHERE 
			admin_no = #{member_id}
		ORDER BY role_no 
	
	</select>
	
	<select id="selectMemberInfo" parameterType="map" resultType="map">
		/* SQL_ID : member.selectMember */
		SELECT
			wa.admin_no,
			wa.admin_group_no,
			wa.company_no,
			wa.admin_id,
			wa.disp_ord,
			wa.admin_name,
			wa.b2c_yn,
			wa.tablet_hp,
			wa.admin_type,
			wa.profile_url,
			wa.department_cd,
			F_GET_CODE_VALUE('department',wa.department_cd) as department_name,
			wa.position_cd,
			wa.mobile,
			wa.stat,
			wa.level_cd,
			wa.web_push_token,
			wa.team_yn,
			wa.master_w_yn,
			wa.main_type,
			wa.create_date,
			wa.update_date,
			wa.password_init_yn,
			wa.password_modify_date,
			wa.login_fail_cnt,
			wa.lock_yn,
			wa.card_no,
			wa.car_no
		FROM
			w_admin wa
		WHERE
			stat = '00'
			AND admin_no = #{member_no}
	
	</select>	
	
	

	<!-- 가입유형으로 회원정보조회 -->
	<select id="selectMemberByIdJoinType" parameterType="map" resultType="map">
		<![CDATA[ /* SQL_ID : member.selectMemberByIdJoinType */ ]]>
		select 
			*
		from 
			w_member 
		where 
			member_id = #{member_id} 
			and join_type = #{join_type}
	</select>
	
	<!-- 회원정보조회 -->
	<select id="selectMemberByLogin" parameterType="map" resultType="map" >
		<![CDATA[ /* SQL_ID : member.selectMemberByLogin */ ]]>
		select 
			*
		from 
			w_member 
		where 
			member_id = #{member_id} 
			and join_type = #{join_type}
			and stat = '00'	
	</select>
	
	<!-- 회원정보조회 -->
	<select id="selectMemberByInfo" parameterType="map" resultType="MemberInfoDataItemVo" >
		<![CDATA[ /* SQL_ID : member.selectMemberByInfo */ ]]>
		    select member_no,
				member_id,
				password,
				name,
				mobile,
				mem_type,
				join_type,
				mem_addr1,
				mem_addr2,
				profile_url,
	        (select count(*)from w_activity where member_no = #{member_no} and read_yn = 'n') as activity_new_cnt
			from w_member
			where member_no = #{member_no}
	</select>
	
	<!-- 회원정보조회 -->
	<select id="selectMemberByMemberNo" parameterType="map" resultType="map" >
		<![CDATA[ /* SQL_ID : member.selectMemberByMemberNo */ ]]>
		select 
			*
		from 
			w_member 
		where 
			member_no = #{member_no}	
	</select>
	
	<!-- 로그인시간갱신 -->
	<update id="updateMemberLoginDate" parameterType="map">
		<![CDATA[ /* SQL_ID : member.updateMemberLoginDate */ ]]>
		update w_member
		set last_login_date = now()
		where member_no = #{member_no}
	</update>
	
	<!-- 회원정보등록-->
	<insert id="insertMember" parameterType="map" useGeneratedKeys="true" keyProperty="member_no" keyColumn="member_no">
		<![CDATA[ /* SQL_ID : member.insertMember */ ]]>
		insert into w_member
			(
				member_id,
				password,
				name,
				join_type,
				mem_type,
				stat,
				create_date,
				last_login_date,
				agree_yn,
				personal_yn,
				profile_url
			)
		values
			(
				#{member_id},
				#{password},
				#{name},
				#{join_type},
				#{mem_type},
				'00',
				now(),
				now(),
				#{agree_yn},
				#{personal_yn},
				#{profile_url}
			)
			
			<selectKey resultType="long" keyProperty="member_no" order="AFTER">
				select last_insert_id() as member_no
			</selectKey>
		
	</insert>
	
	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="map">
		<![CDATA[ /* SQL_ID : member.updateMember */ ]]>
		update
			w_member
		set
			update_date = now()
			<if test="password != null and password != ''">
				,password = #{password}
			</if>
			<if test="mobile != null and mobile != ''">
				,mobile = #{mobile}
			</if>
			<if test="mem_type != null and mem_type != ''">
				,mem_type = #{mem_type}
			</if>
			<if test="mem_addr1 != null and mem_addr1 != ''">
				,mem_addr1 = #{mem_addr1}
			</if>
			<if test="mem_addr2 != null and mem_addr2 != ''">
				,mem_addr2 = #{mem_addr2}
			</if>
			<if test="mem_zip != null and mem_zip != ''">
				,mem_zip = #{mem_zip}
			</if>
		where 
			member_no = #{member_no}
	</update>
	
	<!-- 비밀번호 업데이트 -->
	<update id="updateMemberPassword" parameterType="map">
		<![CDATA[ /* SQL_ID : member.updateMemberPassword */ ]]>
		update w_member
		set password = #{password},
		    update_date = now()
		where member_id = #{member_id}
		and stat = '00'
	</update>
	
</mapper>


