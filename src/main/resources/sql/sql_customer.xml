<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="customer">

	<!-- 고객사 목록 -->
	<select id="listCustomer" resultType="map">
		/* SQL_ID : customer.listCustomer */
		SELECT
			wc.customer_no,
			wc.customer_id,
			wc.customer_name,
			wc.comp_number,
			wc.deal_start_date,
			wc.manager_name,
			wc.manager_rank,
			wc.manager_hp,
			wc.manager_email,
			wc.tax_email,
			wc.stat,
			wc.del_yn,
			wc.create_no,
			F_GET_ADMIN_NAME(wc.create_no) create_name,
			wc.create_date,
			wc.update_no,
			F_GET_ADMIN_NAME(wc.update_no) update_name,
			wc.update_date
		FROM
			w_customer wc
		WHERE 1=1
		<if test="customer_name != null and customer_name != ''">
			AND customer_name LIKE concat('%', #{customer_name}, '%')
		</if>
		<if test="manager_name != null and manager_name != ''">
			AND manager_name LIKE concat('%', #{manager_name}, '%')
		</if>
		ORDER BY 
			wc.customer_no DESC
		<if test="pageFirst != null and pageFirst != ''">	
		LIMIT #{pageFirst}, #{pageLast}
		</if>
		
	</select>
	
	<select id="listCustomerCnt" resultType="int">
		
		/* SQL_ID : customer.listCustomerCnt */
		SELECT
			count(1) as totalRecords
		FROM
			w_customer wc
		WHERE
			1 = 1
		<if test="customer_name != null and customer_name != ''">
			AND customer_name LIKE concat('%', #{customer_name}, '%')
		</if>
		<if test="manager_name != null and manager_name != ''">
			AND manager_name LIKE concat('%', #{manager_name}, '%')
		</if>		
	</select>

	<select id="getCustomerId" resultType="string">
		/* SQL_ID : vendor.getCustomerId */
		SELECT
			CONCAT('CUS_', date_format(now(), '%y%m'), '_', LPAD(IFNULL(MAX(customer_no), 0)+1, 3, '0')) customer_id
		FROM
			w_customer wm
		FOR UPDATE			
	</select>
	
	<select id="selectCustomer" resultType="map">
		/* SQL_ID : customer.listCustomer */
		SELECT
			wc.customer_no,
			wc.customer_id,
			wc.customer_name,
			wc.comp_number,
			wc.deal_start_date,
			wc.manager_name,
			wc.manager_rank,
			wc.manager_hp,
			wc.manager_email,
			wc.tax_email,
			wc.stat,
			wc.del_yn,
			wc.create_no,
			wc.create_date,
			wc.update_no,
			wc.update_date
		FROM
			w_customer wc
		WHERE 
			wc.customer_no = #{customer_no }
			 
	</select>
	
	<insert id="insertCustomer" useGeneratedKeys="true" keyProperty="key_no">
		/* SQL_ID : customer.insertCustomer */
		INSERT INTO w_customer (
			customer_id,
			customer_name,
			comp_number,
			deal_start_date,
			manager_name,
			manager_rank,
			manager_hp,
			manager_email,
			tax_email,
			stat,
			del_yn,
			create_no,
			create_date,
			update_no,
			update_date
		) VALUES (
			#{customer_id},
			#{customer_name},
			#{comp_number},
			#{deal_start_date},
			#{manager_name},
			#{manager_rank},
			#{manager_hp},
			#{manager_email},
			#{tax_email},
			#{stat},
			#{del_yn},
			#{create_no},
			now(),
			#{update_no},
			now()
		)	
	</insert>
	
	<update id="updateCustomer">
		/* SQL_ID : customer.updateCustomer */
		UPDATE w_customer SET 
			customer_id = #{customer_id},
			customer_name = #{customer_name},
			comp_number = #{comp_number},
			deal_start_date = #{deal_start_date},
			manager_name = #{manager_name},
			manager_rank = #{manager_rank},
			manager_hp = #{manager_hp},
			manager_email = #{manager_email},
			tax_email = #{tax_email},
			stat = #{stat},
			update_no = #{update_no},
			update_date = now()
		WHERE
			customer_no = #{customer_no}
	</update>
		
	<update id="deleteCustomer">
		/* SQL_ID : customer.deleteCustomer */
		UPDATE w_customer SET 
		    del_yn = #{del_yn},
		    update_no = #{update_no},
		    update_date = now()
		WHERE
			customer_no = #{customer_no}
	</update>
			
</mapper>
