<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="estimatePop">
	<select id="selectPopEstimate" resultType="map">
		/* SQL_ID : estimate.selectEstimate */
		SELECT
			ww.req_name
			, wc.customer_name
			, concat(ww.work_addr1,ww.work_addr2) AS work_addr
			, concat('#',ww.work_no,'.',lpad(wve.version_no,2,0)) AS doc_num
			, LEFT(wve.update_date,10) AS update_date
			, SUBSTR( _UTF8'일월화수목금토', DAYOFWEEK( wve.update_date ), 1 ) AS day_of_week
			, F_GET_ADMIN_NAME(ww.manager_admin_no) AS manager_admin_name
			, ww.location_name
			, wve.total_unit_price
			, wcb.branch_name
			, CONCAT(concat('#',ww.work_no),"-버전",wve.version_no) AS doc_version_no
		FROM w_work ww
		LEFT OUTER JOIN w_customer wc ON wc.customer_no = ww.customer_no
		LEFT JOIN w_customer_branch wcb ON wcb.customer_no= ww.customer_no
		LEFT OUTER JOIN (SELECT IFNULL( ww.p_work_no, ww.work_no ) AS work_no,
					       swve.version_no ,
					       SUM(swver.resource_count*swver.unit_price) AS total_unit_price,
					       MAX(swver.update_date) AS update_date
					FROM w_version_estimate swve
					INNER JOIN w_version_estimate_resource swver ON swve.estimate_no = swver.estimate_no AND swve.version_no = #{version_no}
					INNER JOIN w_work ww ON ww.work_no = swve.work_no
					GROUP BY IFNULL( ww.p_work_no, ww.work_no )
					) wve ON wve.work_no = ww.work_no
		WHERE ww.work_no = #{work_no} limit 1
		<!-- 두개의 같은 데이터가 등록된경우 1개만 가져온다 -->
	</select>

<!-- cover 견적서 가격부분 데이터 조회 -->
	<select id="selectPopEstimatePrice" resultType="map">
	/* SQL_ID : estimate.selectPopEstimatePrice */
	    SELECT
			ww.work_no ,
			wver.create_date,
			wver.resource_type,
		    wve.version_no,
			wve.stat,
			wve.apply_date,
		    wver.unit_cd,
		    wver.unit_price,
		    wver.resource_standard,
		    wver.resource_name,
		    wver.resource_no,
			wver.resource_count,
			wver.resource_count*wver.unit_price AS total_price,
			<!--wver.est_unit_cd*wver.est_unit_price AS nego_cost,-->
			wcb.branch_name,
			apply_date
        FROM w_work ww
        LEFT JOIN w_version_estimate wve ON (wve.work_no = ww.work_no)
		LEFT JOIN w_customer_branch wcb ON wcb.customer_no= ww.customer_no
        LEFT JOIN w_version_estimate_resource wver ON wve.estimate_no = wver.estimate_no
        WHERE IFNULL(ww.p_work_no, ww.work_no) = #{work_no}
		AND wver.del_yn != 'Y'
        AND wve.version_no = #{version_no}
		group by wver.create_date
	</select>

		<!-- 상세 견적 가격 데이터 가져오기 -->
		<select id="selectListPrice" parameterType="map" resultType="map">
		SELECT
			FORMAT(SUM(resource_count*unit_price),0) as price_list
		FROM
			w_version_estimate wve
			inner join w_version_estimate_resource wver on (wve.estimate_no = wver.estimate_no)
		WHERE
			wve.version_no = 5
		AND wver.del_yn != 'Y'
        group by wve.work_no;
	</select>

	<!-- pop견적서 상세 견적 -->
	<select id="listEstimateDetail" resultType="map">
		/* SQL_ID : estimate.listEstimateDetail */
	<![CDATA[
	SELECT
			wve.estimate_no,
			wve.version_no,
			wve.admin_no,
			wve.work_no,
			wve.stat,
			wve.estimate_date,
			wve.apply_admin_no,
			wve.apply_date,
			wve.create_no,
			wve.create_date,
			wve.update_no,
			wve.update_date,
			wver.resource_no,
			wver.resource_type,
			wver.resource_name,
			wver.resource_standard,
			wver.resource_count,
			wver.unit_cd,
			FORMAT(LEFT(wver.unit_price,LENGTH(wver.unit_price)),0) AS unit_price,
			IF(unit_price < 0, replace(CAST(FORMAT(LEFT(wver.unit_price,LENGTH(wver.unit_price)),0) AS CHAR(10)), '-','- ' ),
            FORMAT(LEFT(wver.unit_price,LENGTH(wver.unit_price)),0)) as t_unit_price,
		    wver.est_resource_count,
			wver.est_unit_cd,
			wver.est_unit_price,
            wver.del_yn,
			wver.create_no,
			wver.create_date,
			wver.update_no,
			wver.update_date,
			FORMAT((wver.unit_price*wver.resource_count),0) AS price_list,
            if(wver.unit_price*wver.resource_count <0, replace(CAST(FORMAT(LEFT(wver.unit_price*wver.resource_count,LENGTH(wver.unit_price*wver.resource_count)),0) AS CHAR(10)), '-','- ' ),
            FORMAT(LEFT(wver.unit_price*wver.resource_count,LENGTH(wver.unit_price*wver.resource_count)),0)) as t_total_price,
			rt.code_name,
			ut.code_name AS unit_cd_name
		FROM
			w_version_estimate wve
				inner join w_version_estimate_resource wver on (wve.estimate_no = wver.estimate_no)
				LEFT JOIN (SELECT code_name, code_value FROM w_code WHERE code_gb = 'resource_type')
				AS rt ON rt.code_value = wver.resource_type
				LEFT JOIN (SELECT code_name, code_value FROM w_code wc WHERE wc.code_gb = "unit_cd")
                AS ut ON ut.code_value = wver.unit_cd
		WHERE
			wve.work_no = #{work_no}
		AND wve.version_no = #{version_no}
		AND wver.del_yn != 'Y'
		ORDER BY
			wver.resource_type ASC;
			]]>
	</select>

	<!-- 작업 요청 리스트 조회 -->
	<select id="selectPopEstimateList" parameterType="map" resultType="map">
		<![CDATA[ /* SQL_ID : work.selectWorkList */ ]]>
		SELECT
			ww.work_no,
			ww.work_id,
			ww.location_name,
            wver.unit_price,
            wver.resource_count,
            FORMAT(SUM(wver.unit_price*wver.resource_count),0) AS list_total,
			(SELECT estimate_no FROM w_version_estimate WHERE work_no = ww.work_no LIMIT 1) estimate_no
		FROM
			w_work ww
            INNER JOIN w_version_estimate wve ON (wve.work_no = ww.work_no)
			INNER JOIN w_version_estimate_resource wver ON wve.estimate_no = wver.estimate_no
			WHERE IFNULL(ww.p_work_no, ww.work_no) = #{work_no}
			AND wve.version_no = #{version_no}
            AND wver.del_yn != 'Y'
            AND ww.delete_yn != 'Y'
            GROUP BY wve.work_no;
	</select>

	<!-- 가장 최근 업데이튼한 작성자 조회-->
		<select id="selectCurrentAuthor" parameterType="map" resultType="map">
		select ww.req_name from w_work ww
			inner join w_version_estimate wve ON ww.work_no = wve.work_no
	        inner join w_version_estimate_resource wver ON wve.estimate_no = wver.estimate_no
	        where ww.work_no = #{work_no} AND
	        wve.version_no = #{version_no}
	        order by wver.update_date DESC limit 1;
	</select>
</mapper>

